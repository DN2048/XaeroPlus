plugins {
	id 'dev.architectury.loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = "jitpack.io"
		url = "https://jitpack.io"
	}
	mavenLocal()
}

loom {
    accessWidenerPath = file('src/main/resources/xaeroplus.accesswidener')
    forge {
		mixinConfigs = ["xaeroplus.mixins.json"]
		convertAccessWideners = true
		extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
	}
}

configurations {
	jarLibs
	shadow.extendsFrom jarLibs
}

ext {
	worldmap_version = "1.37.5"
	minimap_version = "23.9.5"
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		it.mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
		it.mappings file("libs/yarnpatch.tiny")
	}
	forge "net.minecraftforge:forge:${project.forge_version}"
	implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.2"))
	implementation(include "io.github.llamalad7:mixinextras-forge:0.3.2")

	implementation(jarLibs "com.github.ben-manes.caffeine:caffeine:3.1.8")
    implementation(include "net.lenni0451:LambdaEvents:2.4.0")
    forgeRuntimeLibrary(jarLibs 'org.xerial:sqlite-jdbc:3.44.1.0')

	modImplementation "maven.modrinth:xaeros-world-map:${worldmap_version}_Forge_1.20.4"
	modImplementation "maven.modrinth:xaeros-minimap:${minimap_version}_Forge_1.20.4"
	modCompileOnly files("libs/baritone-unoptimized-forge-1.10.2.jar")
	modCompileOnly "maven.modrinth:waystones:15.0.1+forge-1.20.2"
	modCompileOnly "maven.modrinth:balm:8.0.1+forge-1.20.2"
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand([
                "version": project.version,
                "worldmap_version": project.ext.worldmap_version,
                "minimap_version": project.ext.minimap_version
        ])
    }
}

tasks.register('printWorldMapVersion') {
    println project.ext.worldmap_version
}
tasks.register('printMinimapVersion') {
    println project.ext.minimap_version
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

shadowJar {
	configurations = [project.configurations.shadow]
	archiveClassifier.set('shadow')

	exclude 'com/google/**'
	exclude 'org/objectweb/**'
	exclude 'org/checkerframework/**'
	exclude "fabric.mod.json"
	exclude 'org/sqlite/native/FreeBSD/**'
	exclude 'org/sqlite/native/Linux-Android/**'
	exclude 'org/sqlite/native/Linux-Musl/**'
	exclude 'org/sqlite/native/Linux/arm/**'
	exclude 'org/sqlite/native/Linux/aarch64/**'
	exclude 'org/sqlite/native/Linux/armv6/**'
	exclude 'org/sqlite/native/Linux/x86/**'
	exclude 'org/sqlite/native/Linux/armv7/**'
	exclude 'org/sqlite/native/Linux/ppc64/**'
	exclude 'org/sqlite/native/Windows/armv7/**'
	exclude 'org/sqlite/native/Windows/aarch64/**'
	exclude 'org/sqlite/native/Windows/armv7/**'
	exclude 'org/slf4j/**'
	relocate "com.github.benmanes.caffeine", "xaeroplus.com.github.benmanes.caffeine.shadow"
}

remapJar {
	dependsOn shadowJar
	inputFile.set shadowJar.archiveFile.get()
}
