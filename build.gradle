plugins {
	id 'dev.architectury.loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = "jitpack.io"
		url = "https://jitpack.io"
	}
	jcenter()
	mavenLocal()
}

loom {
	forge {
		mixinConfigs = ["xaeroplus.mixins.json"]
	}
}

configurations {
	jarLibs
	shadow.extendsFrom jarLibs
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	forge "net.minecraftforge:forge:${project.forge_version}"

	forgeRuntimeLibrary(jarLibs "com.github.ben-manes.caffeine:caffeine:3.1.8")
	forgeRuntimeLibrary(jarLibs "com.github.collarmc:pounce:0e8492b68e")
    forgeRuntimeLibrary(jarLibs 'org.xerial:sqlite-jdbc:3.43.0.0')

	modImplementation "maven.modrinth:xaeros-world-map:1.35.0_Forge_1.20.2"
	modImplementation "maven.modrinth:xaeros-minimap:23.8.3_Forge_1.20.2"
	modImplementation files("libs/baritone-unoptimized-forge-1.10.2.jar")
	modCompileOnly "maven.modrinth:waystones:15.0.0+forge-1.20.2"
	modCompileOnly "maven.modrinth:balm:8.0.1+forge-1.20.2"
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

shadowJar {
	configurations = [project.configurations.shadow]
	archiveClassifier.set('shadow')

	exclude 'com/google/**'
	exclude 'org/objectweb/**'
	exclude 'org/checkerframework/**'
	exclude "fabric.mod.json"
	exclude 'org/sqlite/native/FreeBSD/**'
	exclude 'org/sqlite/native/Linux-Android/**'
	exclude 'org/sqlite/native/Linux-Musl/**'
	exclude 'org/sqlite/native/Linux/arm/**'
	exclude 'org/sqlite/native/Linux/aarch64/**'
	exclude 'org/sqlite/native/Linux/armv6/**'
	exclude 'org/sqlite/native/Linux/x86/**'
	exclude 'org/sqlite/native/Linux/armv7/**'
	exclude 'org/sqlite/native/Linux/ppc64/**'
	exclude 'org/sqlite/native/Windows/armv7/**'
	exclude 'org/sqlite/native/Windows/aarch64/**'
	exclude 'org/sqlite/native/Windows/armv7/**'
	relocate "com.collarmc.pounce", "xaeroplus.com.collarmc.pounce.shadow"
	relocate "com.github.benmanes.caffeine", "xaeroplus.com.github.benmanes.caffeine.shadow"
}

remapJar {
	dependsOn shadowJar
	inputFile.set shadowJar.archiveFile.get()
}
